:struct IPAddress.Format
  :is IntoString

  :let _value IPAddress'box
  :new (@_value)

  :fun into_string_space USize:
    if @_value.is_v4 (
      "xxx.xxx.xxx.xxx".size
    |
      "xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx".size
    )

  :fun into_string(out String'ref) None
    at_start = True
    if @_value.is_v4 (
      @_value._v4_each_u8 -> (u8 |
        if !at_start out.push_byte('.')
        at_start = False
        u8.into_string(out)
      )
    |
      previous_deferred_zero = False
      is_compressing_zeros = False
      did_compress_zeros = False
      @_value._v6_each_u16 -> (u16 |
        if u16 == 0 && !did_compress_zeros (
          case (
          | is_compressing_zeros | next // go straight to the next u16
          | previous_deferred_zero |
            out << "::"
            at_start = True
            previous_deferred_zero = False
            is_compressing_zeros = True
            next
          |
            previous_deferred_zero = True
            next
          )
        |
          case (
          | is_compressing_zeros |
            is_compressing_zeros = False
            did_compress_zeros = True
          | previous_deferred_zero |
            if !at_start out.push_byte(':')
            at_start = False
            out.push_byte('0')
            previous_deferred_zero = False
          )
        )
        if !at_start out.push_byte(':')
        at_start = False
        u16
          .format.hex.bare.lowercase.without_leading_zeros
          .into_string(out)
      )
    )
